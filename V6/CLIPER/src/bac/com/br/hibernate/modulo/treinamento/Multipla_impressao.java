/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bac.com.br.hibernate.modulo.treinamento;

import bac.com.br.hibernate.Dao.ColaboradorDao;
import bac.com.br.hibernate.Dao.DescricaoDao;
import bac.com.br.hibernate.entidade.Colaborador;
import bac.com.br.hibernate.entidade.Historico;
import bac.com.br.hibernate.modulo.profissiografia.Listar_colaborador;
import bac.com.br.hibernate.relatorios.Multi_impressao;
import bac.com.br.hibernate.relatorios.Relatorio_descricao;
import bac.com.br.hibernate.utils.Daos_Nativos;
import bac.com.br.hibernate.utils.Msg;
import bac.com.br.hibernate.utils.Rel_desc_car;
import bac.com.br.hibernate.utils.Utils;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bruno
 */
public class Multipla_impressao extends javax.swing.JDialog {

    private Carregar_colaboradores pai;
    private Listar_colaborador irmao;
    List<Integer> lista = new ArrayList<>();
    Colaborador col;
    /**
     * Creates new form Multipla_impressao
     */
    public Multipla_impressao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public Multipla_impressao(Carregar_colaboradores parent, boolean modal) {
        super(parent, modal);
        this.pai = parent;
        initComponents();
        //inserir();
    }
    public Multipla_impressao(Listar_colaborador parent, boolean modal) {
        super(parent, modal);
        this.irmao = parent;
        initComponents();
        //inserir();
    }
    
    public void selecionar(Long id){
        col = new ColaboradorDao().seleciona(id);
    }
    
    public void atualizar(Long id){
        List<Historico> lista = new ColaboradorDao().cursos(id);
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        model.setNumRows(0);
        for (Historico historico : lista) {
            model.addRow(new Object[]{
               historico.getIdHistorico(),
               historico.getIdCargo().getFuncao(),
               historico.getPeriodoInicio(),
               historico.getPeriodoFim(),
               false
            });
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        jButton2.setText("jButton2");
        jPanel1.add(jButton2);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "CARGO", "DATA INICIO", "DATA ALTERACAO", "OPCAO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabela);
        if (tabela.getColumnModel().getColumnCount() > 0) {
            tabela.getColumnModel().getColumn(0).setResizable(false);
            tabela.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel2.add(jScrollPane1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(416, 241));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int linhas = tabela.getRowCount();
                for (int i = 0; i < linhas ; i++) {
                        if(tabela.getValueAt(i,4).equals(true)){
                                System.out.println("selecionado");
                                lista.add(Integer.parseInt(tabela.getValueAt(i, 0).toString()));
                        }else{
                                System.out.println("nao selecionado");
                        }
                }
                System.out.println(lista.size());
                for (int j = 0; j< lista.size();j++) {
                            Rel_desc_car rel = new Rel_desc_car();
                            
                            rel.setDocs(new Daos_Nativos().impressao_documentos(Integer.parseInt(col.getId().toString()),"IT-%"));
                            rel.setIds(new DescricaoDao().comparar_setores(col.getId(),"IT-%"));
                            //rel.setNums(new DescricaoDao().comparar_numeros(col.getId(),"IT%"));
                            //String operacional = Utils.concatenar(rel.getIds(),rel.getDocs());
                            
                            Rel_desc_car rel2 = new Rel_desc_car();
                            rel2.setDocs(new Daos_Nativos().impressao_documentos(Integer.parseInt(col.getId().toString()),"IS-%"));
                            rel2.setIds(new DescricaoDao().comparar_setores(col.getId(),"IS-%"));
                            //rel2.setNums(new DescricaoDao().comparar_numeros(col.getId(),"IS%"));
                           /// String seguranca = Utils.concatenar(rel2.getIds(),rel2.getDocs());

                            System.out.println("____ documentos _____");
                            if(rel.getDocs().size() > 0){
                                new Multi_impressao(col.getId(),"","",Utils.Sistema_operacional(),String.valueOf(lista.get(j)));
                            
                            }else{
                                Msg.alerta(this, "descrição selecionada não contém documentação obrigatória");
                            }
                }
                lista.clear();
        } catch (Exception e) {
            e.printStackTrace();
            Msg.erro(this, "Erro ao selecionar funções"+e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Multipla_impressao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Multipla_impressao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Multipla_impressao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Multipla_impressao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Multipla_impressao dialog = new Multipla_impressao(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
