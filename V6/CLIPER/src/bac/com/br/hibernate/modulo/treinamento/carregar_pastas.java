/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bac.com.br.hibernate.modulo.treinamento;

import bac.com.br.hibernate.Dao.PastaDao;
import bac.com.br.hibernate.Dao.TreinadorDao;
import bac.com.br.hibernate.Dao.TreinamentoDao;
import bac.com.br.hibernate.entidade.Pasta;
import bac.com.br.hibernate.entidade.Treinamento;
import bac.com.br.hibernate.utils.Msg;
import bac.com.br.hibernate.utils.Utils;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bruno
 */
public class carregar_pastas extends javax.swing.JDialog {

    private Tela_principal pai;
    List<Pasta> lista;
    List<Treinamento> lista2;
    protected Pasta pasta;
    Treinamento trei;
    SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Creates new form carregar_pastas
     */
    public carregar_pastas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        atualizar();
        Utils.maximizar(this);
        pasta = new Pasta();
        trei = new Treinamento();
    }

    public carregar_pastas(Tela_principal parent, boolean modal) {
        super(parent, modal);
        this.pai = parent;
        initComponents();
        atualizar();
        Utils.maximizar(this);
        pasta = new Pasta();
        trei = new Treinamento();
    }

    private void atualizar() {
        try {
            lista = new PastaDao().atualizar();
            DefaultTableModel model = (DefaultTableModel) tabela.getModel();
            model.setNumRows(0);
            for (Pasta p : lista) {
                model.addRow(new Object[]{
                    p.getNumero(),
                    p.getArmazenamento(),
                    p.getDataDescarte(),
                    p.getDescarte()
                });
            }
        } catch (Exception e) {
        }
    }

    protected void atualizar2() {
        try {
            int row = tabela.getSelectedRow();
            lista2 = new PastaDao().treinamentos_pasta(lista.get(row).getId());
            DefaultTableModel model = (DefaultTableModel) tabela_treinamento.getModel();
            model.setNumRows(0);
            for (Treinamento f : lista2) {
                model.addRow(new Object[]{
                    f.getId(),
                    format.format(f.getDataTreinamento()),
                    f.getTipo(),
                    f.getLocalidade(),
                    f.getStatus(),
                    format.format(f.getProxTreinamento())
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
            Msg.erro(this, "erro ao tentar atualizar tabela \n" + e.getMessage());
        }
    }
    boolean aceita = false;

    // VEIRIFICA OS CAMPOS OBRIGATORIOS
    private boolean verifica() {
        try {
            Integer.parseInt(pesquisa.getText().toString());
        } catch (Exception e) {
            e.printStackTrace();
            Msg.erro(this, "o campo de pesquisa aceita apenas numeros inteiros");
            aceita = true;
        }
        return aceita;
    }

    private void pesquisa() {
        if (verifica() == false) {
            if (pesquisa.getText().equals("")) {
                Msg.alerta(this, "preencha o campo para a realização da busca");
            } else {

                try {
                    lista = new PastaDao().getlista(pesquisa.getText());
                    DefaultTableModel model = (DefaultTableModel) tabela.getModel();
                    model.setNumRows(0);

                    for (Pasta p : lista) {
                        model.addRow(new Object[]{
                            p.getNumero(),
                            p.getArmazenamento(),
                            p.getDataDescarte(),
                            p.getDescarte()
                        });
                    }
                } catch (Exception e) {
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela_treinamento = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txpesquisa = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        pesquisa = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(Toolkit.getDefaultToolkit().getImage("c:/treinamento/icone.png"));

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.GridLayout(1, 0, 10, 10));

        jPanel6.setLayout(new java.awt.BorderLayout());

        tabela.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NUMERO", "ARMAZENAMENTO", "DATA DE DESCARTE", "LOCAL DE DESCARTE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        tabela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        jPanel6.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel3.setText("PASTA");
        jPanel6.add(jLabel3, java.awt.BorderLayout.PAGE_START);

        jPanel5.add(jPanel6);

        jPanel7.setLayout(new java.awt.BorderLayout());

        tabela_treinamento.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        tabela_treinamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NUMERO", "DATA", "TIPO", "LOCAL", "SITUAÇÃO", "VENCIMENTO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela_treinamento.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tabela_treinamento);

        jPanel7.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel4.setText("TREINAMENTOS ARMAZENADOS");
        jPanel7.add(jLabel4, java.awt.BorderLayout.PAGE_START);

        jPanel5.add(jPanel7);

        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel1.setText("PESQUISAR:");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bac/com/br/hibernate/imagens/folder_explore.png"))); // NOI18N
        jButton1.setText("BUSCAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bac/com/br/hibernate/imagens/atualizar.png"))); // NOI18N
        jButton2.setText("ATUALIZAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        pesquisa.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        pesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pesquisaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout txpesquisaLayout = new javax.swing.GroupLayout(txpesquisa);
        txpesquisa.setLayout(txpesquisaLayout);
        txpesquisaLayout.setHorizontalGroup(
            txpesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txpesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );
        txpesquisaLayout.setVerticalGroup(
            txpesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txpesquisaLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(txpesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txpesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(txpesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2))))
        );

        getContentPane().add(txpesquisa, java.awt.BorderLayout.PAGE_START);

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bac/com/br/hibernate/imagens/cancel.png"))); // NOI18N
        jButton3.setText("DESCARTE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        atualizar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        pesquisa();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int row = tabela.getSelectedRow();
        if (row < 0) {
            Msg.alerta(this, "selecione um registro");
        } else {
            
                int a = 0;
            List<Pasta> lista3 = new PastaDao().getdescarte(lista.get(row).getId());
            List<Date> lista4 = new TreinamentoDao().curdate();
            if(lista3.get(0).getDataDescarte().before(lista4.get(0))){
                Msg.alerta(this, "prazo de validade não atingido");
            }else{ 
            lista2 = new PastaDao().treinamentos(lista.get(row).getId());
            for (int i = 0; i <= lista2.size(); i++) {
                try {
                    trei = new TreinadorDao().seleciona_treinamento(lista2.get(0).getId());
                } catch (Exception e) {
                    e.printStackTrace();
                    Msg.erro(this, "erro ao verificar descarte");
                }
                System.out.println("\nstatus"+trei.getStatus());
                if (trei.getStatus().equals("ATUALIZADO")) {
                    a = 1;
                }
            }
                System.out.println("\nnumero"+a);
            if (a == 1) {
                Msg.alerta(this, "esta pasta nao pode ser descartada \n"
                        + "por que contem treinamentos validos");
            } else {
                if (Msg.confirmar(this, "deseja realmente descartar esta pasta") == true) {
                    new Alterar_descarte(this, true);
                    pasta = new PastaDao().seleciona(lista.get(row).getId());
                    if (pasta.getDescarte().equals("")) {
                        Msg.alerta(this, "descarte nao realizado preencha o campo para\n"
                                + "para realizar a operação corretamente");
                    } else {
                        try {
                            new PastaDao().alterar(pasta);
                            Msg.informacao(this, "descarte realizado");
                            atualizar();
                        } catch (Exception e) {
                            e.printStackTrace();
                            Msg.erro(this, "erro ao descartar pasta");
                        }
                    }

                } else {
                    return;
                }
            }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        atualizar2();
    }//GEN-LAST:event_tabelaMouseClicked

    private void tabelaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaKeyPressed
        atualizar2();
    }//GEN-LAST:event_tabelaKeyPressed

    private void pesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisaKeyReleased
        pesquisa();
    }//GEN-LAST:event_pesquisaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(carregar_pastas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(carregar_pastas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(carregar_pastas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(carregar_pastas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                carregar_pastas dialog = new carregar_pastas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField pesquisa;
    private javax.swing.JTable tabela;
    private javax.swing.JTable tabela_treinamento;
    private javax.swing.JPanel txpesquisa;
    // End of variables declaration//GEN-END:variables
}
