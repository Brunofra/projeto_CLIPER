/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bac.com.br.hibernate.modulo.treinamento;

import bac.com.br.hibernate.Dao.TreinamentoDao;
import bac.com.br.hibernate.entidade.Treinamento;
import bac.com.br.hibernate.utils.Meses;
import bac.com.br.hibernate.utils.Msg;
import bac.com.br.hibernate.utils.Utils;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author bruno
 */
public class Grafico_treinamentos extends javax.swing.JDialog {

    private Tela_principal pai;
    String min;
    String max;
    /**
     * Creates new form Grafico_treinamentos
     */
    public Grafico_treinamentos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Utils.maximizar(this);
        atualizacombo();
    }

    public Grafico_treinamentos(Tela_principal parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Utils.maximizar(this);
        atualizacombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void atualizacombo(){
        cbano.removeAllItems();
        List<String> lista1 = new TreinamentoDao().min();
        min = String.valueOf(lista1.get(0));
        List<String> lista2 = new TreinamentoDao().max();
        max = String.valueOf(lista2.get(0));
        int a = Integer.parseInt(min);
        int b = Integer.parseInt(max);
        cbano.addItem("<...>");
        for(int i = a; i<=b; i++){
            cbano.addItem(i);
            System.out.println(i);
        }
    }
    private void visualizar(){
        if(cbano.getSelectedIndex() == 0){
          Msg.alerta(this, "selecione a opção desejada");
        }else{
           criaGrafico();
        }
    }
    private void criaGrafico() {
        DefaultCategoryDataset cds = createDatasetGrafico();
        String titulo = " periodos de treinamentos "+cbano.getSelectedItem();
        String eixoy = "meses";
        String txt_legenda = "Quantidade de treinamentos";
        JFreeChart graf
                = ChartFactory.createLineChart3D(titulo, eixoy, txt_legenda,
                        cds, PlotOrientation.VERTICAL, true, true, true);

        ChartPanel myChartPanel = new ChartPanel(graf, true);
        myChartPanel.setSize(painel.getWidth(), painel.getHeight());
        myChartPanel.setVisible(true);
        painel.removeAll();
        painel.add(myChartPanel);
        painel.revalidate();
        painel.repaint();
    }

    private DefaultCategoryDataset createDatasetGrafico() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        try {
            List<String> lista = new TreinamentoDao().grafico(cbano.getSelectedItem().toString());
            System.out.println(cbano.getSelectedItem().toString());
            List<Object> lista2 = new TreinamentoDao().grafico2(cbano.getSelectedItem().toString());
           
            if(lista.size() < 0){
                Msg.alerta(this, "nao ha treinamentos no periodo selecionado");
            }else{
                String b = "";
                int i = 0; {
                    for (Object objectses : lista2) {
                        String s = String.valueOf(lista.get(i));
                        //System.out.println("\n" + s);
                        int a = Integer.parseInt(s);
                       // System.out.println("\n" + String.valueOf(objectses.toString()));

                        if(objectses.toString() == "1"){
                            b = "janeiro";
                        }
                        if(objectses.toString() == "2"){
                            b = "fevereiro";
                        }
                        if(objectses == "3"){
                            b = "março";
                        }
                        if(objectses == "4"){
                            b = "abril";
                        }
                        if(objectses == "5"){
                            b = "maio";
                        }
                        if(objectses == "6"){
                            b = "junho";
                        }
                        if(objectses == "7"){
                            b = "julho";
                        }
                        if(objectses == "8"){
                            b = "agosto";
                        }
                        if(objectses == "9"){
                            b = "setembro";
                        }
                        if(objectses == "10"){
                            b = "outubro";
                        }
                        if(objectses == "11"){
                            b = "novembro";
                        }
                        if(objectses == "12"){
                            b = "dezembro";
                        }

                            dataset.addValue(a, "indicador", objectses.toString());
                            i++;
                    }
                        System.out.println("\n" + lista);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            Msg.erro(this, "Erro ao Alimentar o Relatório!");
        }
        return dataset;
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        cbano = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(Toolkit.getDefaultToolkit().getImage("c:/treinamento/icone.png"));

        painel.setLayout(new java.awt.GridLayout(1, 0));
        getContentPane().add(painel, java.awt.BorderLayout.CENTER);

        cbano.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cbano);

        jButton1.setText("VISUALIZAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       visualizar();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Grafico_treinamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Grafico_treinamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Grafico_treinamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Grafico_treinamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Grafico_treinamentos dialog = new Grafico_treinamentos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbano;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel painel;
    // End of variables declaration//GEN-END:variables
}
